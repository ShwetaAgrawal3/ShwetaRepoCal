{"ast":null,"code":"var _jsxFileName = \"C:\\\\CShweta\\\\src\\\\components\\\\ProductSelectionModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ProductSelectionModal.css';\n// import ModalView from './ModalV1/modalView'; \nimport ModalV2 from './ModalV1/modalV2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductSelectionModal = ({\n  onClose,\n  onProductToggle,\n  selectedProducts,\n  setIsTileModalOpend,\n  handleClose\n}) => {\n  _s();\n  const [tempSelectedProducts, setTempSelectedProducts] = useState([...selectedProducts]);\n  const handleOverlayClick = e => {\n    if (e.target.className === 'tile-modal-overlay') {\n      handleSubmit();\n    }\n  };\n  const handleProductClick = product => {\n    setTempSelectedProducts(prevSelectedProducts => prevSelectedProducts.includes(product) ? prevSelectedProducts.filter(p => p !== product) : [...prevSelectedProducts, product]);\n  };\n  const handleSubmit = () => {\n    const newSelectedProducts = [...tempSelectedProducts];\n    selectedProducts.forEach(product => {\n      if (!newSelectedProducts.includes(product)) {\n        onProductToggle(product);\n      }\n    });\n    newSelectedProducts.forEach(product => {\n      if (!selectedProducts.includes(product)) {\n        onProductToggle(product);\n      }\n    });\n    onClose();\n    if (selectedProducts.length > 0) {\n      setIsTileModalOpend(prev => !prev);\n    }\n  };\n  const products = [{\n    product: 'ce_products',\n    displayText: 'CE Component'\n  }, {\n    product: 'cloud_storage_products',\n    displayText: 'Cloud Storage'\n  }, {\n    product: 'db_products ',\n    displayText: 'DB'\n  }, {\n    product: 'bq_products',\n    displayText: 'BQ'\n  }, {\n    product: 'dFlow_products',\n    displayText: 'Dataflow'\n  }, {\n    product: 'gclb_products',\n    displayText: 'Google Cloud Load Balancer'\n  }, {\n    product: 'lStorage_products',\n    displayText: 'Log Storage'\n  }, {\n    product: 'filestore_products',\n    displayText: 'Filestore'\n  }, {\n    product: 'Product8',\n    displayText: 'Product 8'\n  }];\n  return /*#__PURE__*/_jsxDEV(ModalV2, {\n    text: \"Select an Option\",\n    buttonText: \"Submit\",\n    handleOverlayClick: handleOverlayClick,\n    handleSubmit: handleSubmit,\n    classNames: 'modalSize',\n    onClose: handleClose,\n    containerClass: 'container',\n    children: products.map(({\n      product,\n      displayText\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `tile-button ${tempSelectedProducts.includes(product) ? 'selected' : ''}`,\n      onClick: () => handleProductClick(product),\n      children: displayText\n    }, product, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSelectionModal, \"BVBLboHmZrYTEtKbWS4sgSvv1f8=\");\n_c = ProductSelectionModal;\nexport default ProductSelectionModal;\nvar _c;\n$RefreshReg$(_c, \"ProductSelectionModal\");","map":{"version":3,"names":["React","useState","ModalV2","jsxDEV","_jsxDEV","ProductSelectionModal","onClose","onProductToggle","selectedProducts","setIsTileModalOpend","handleClose","_s","tempSelectedProducts","setTempSelectedProducts","handleOverlayClick","e","target","className","handleSubmit","handleProductClick","product","prevSelectedProducts","includes","filter","p","newSelectedProducts","forEach","length","prev","products","displayText","text","buttonText","classNames","containerClass","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CShweta/src/components/ProductSelectionModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ProductSelectionModal.css';\r\n// import ModalView from './ModalV1/modalView'; \r\nimport ModalV2 from './ModalV1/modalV2';\r\n\r\nconst ProductSelectionModal = ({ onClose, onProductToggle, selectedProducts ,setIsTileModalOpend,handleClose}) => {\r\n  const [tempSelectedProducts, setTempSelectedProducts] = useState([...selectedProducts]);\r\n \r\n\r\n  const handleOverlayClick = (e) => {\r\n    if (e.target.className === 'tile-modal-overlay') {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleProductClick = (product) => {\r\n    setTempSelectedProducts((prevSelectedProducts) =>\r\n      prevSelectedProducts.includes(product)\r\n        ? prevSelectedProducts.filter((p) => p !== product)\r\n        : [...prevSelectedProducts, product]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const newSelectedProducts = [...tempSelectedProducts];\r\n    selectedProducts.forEach(product => {\r\n      if (!newSelectedProducts.includes(product)) {\r\n        onProductToggle(product);\r\n      }\r\n    });\r\n    newSelectedProducts.forEach(product => {\r\n      if (!selectedProducts.includes(product)) {\r\n        onProductToggle(product);\r\n      }\r\n    });\r\n    onClose();\r\n    if(selectedProducts.length>0){\r\n      setIsTileModalOpend((prev)=>!prev)\r\n    }\r\n  };\r\n\r\n  const products = [\r\n    { product: 'ce_products', displayText: 'CE Component' },\r\n    { product: 'cloud_storage_products', displayText: 'Cloud Storage' },\r\n    { product: 'db_products ', displayText: 'DB' },\r\n    { product: 'bq_products', displayText: 'BQ' },\r\n    { product: 'dFlow_products', displayText: 'Dataflow' },\r\n    { product: 'gclb_products', displayText: 'Google Cloud Load Balancer' },\r\n    { product: 'lStorage_products', displayText: 'Log Storage' },\r\n    { product: 'filestore_products', displayText: 'Filestore' },\r\n    { product: 'Product8', displayText: 'Product 8' },\r\n  ];\r\n  \r\n\r\n  return (\r\n    <ModalV2\r\n      text=\"Select an Option\"\r\n      buttonText=\"Submit\"\r\n      handleOverlayClick={handleOverlayClick}\r\n      handleSubmit={handleSubmit}\r\n      classNames={'modalSize'}\r\n      onClose={handleClose}\r\n      containerClass={'container'}\r\n    >\r\n\r\n      {products.map(({ product, displayText }) => (\r\n        <button\r\n          key={product}\r\n          className={`tile-button ${tempSelectedProducts.includes(product) ? 'selected' : ''}`}\r\n          onClick={() => handleProductClick(product)}\r\n        >\r\n          {displayText}\r\n        </button>\r\n      ))}\r\n    </ModalV2>\r\n  );\r\n};\r\n\r\nexport default ProductSelectionModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
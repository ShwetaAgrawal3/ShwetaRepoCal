{"ast":null,"code":"var _jsxFileName = \"C:\\\\CShweta\\\\src\\\\components\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Calculator.css';\nimport Modal from './Products/DetailedCostsModal';\nimport ProductSelectionModal from './ProductSelectionModal';\nimport Headers from './Headers';\nimport CEComponent from './Products/CEComponent';\nimport CloudStorageComponent from './Products/CloudStorageComponent';\n// import DBComponent from './DBComponent';\nimport BQComponent from './Products/BQComponent';\n// import DFlowComponent from './DFlowComponent';\n// import GCLBComponent from './GCLBComponent'\n// import LStorageComponent from './LStorageComponent';\nimport StickyButton from './StickyButton';\nimport ProductCostTable from './ProductCostTable/ProductCostTable';\nimport ModalView from './ModalV1/modalView';\nimport LandingPage from './LandingPage/LandingPage';\n// import FilestoreComponent from './FilestoreComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  ceNumNodes: \"1\",\n  ceNumClusters: \"1\",\n  ceCrit: \"1\",\n  ceSizeNodes: \"0\",\n  ceBootDiskSize: \"0\",\n  // storageType: 0,\n  // storageVolume: 0,\n  // storageClassA: 0,\n  // storageClassB: 0,\n  // storageRegionEgress: 0,\n  // storageInetEgress: 0,\n  // storageFileBackup: 0,\n  // storageBlockSnapshot: 0,\n  storageAmount: \"0\",\n  storageClassA: \"0\",\n  storageClassB: \"0\",\n  storageTransfer: \"0\",\n  // basicStorage: 0,\n  // premiumStorage: 0,\n  // highCapStorage: 0,\n  // lowCapStorage: 0,\n  // enterpriseStorage: 0,\n  // backupStorage: 0,\n  // dbType: 0,\n  // dbSize: 0,\n  // dbMysqlNetEgress: 0,\n  // dbMysqlInetEgress: 0,\n  // dbNosqlReads: 0,\n  // dbNosqlWrites: 0,\n  // dbNosqlDocs: 0,\n  // dbNosqlNetEgress: 0,\n  // dbNosqlInetEgress: 0,\n  // dbBDRegionEgress: 0,\n  // dbBDInetEgress: 0,\n  bqComputeSize: \"0\",\n  bqActiveStorage: \"0\",\n  bqLongStorage: \"0\",\n  bqActivePhysStorage: \"0\",\n  bqLongPhysStorage: \"0\",\n  bqStreamInserts: \"0\",\n  bqStreamWrites: \"0\",\n  bqStreamReads: \"0\"\n  // dFlowType: 0,\n  // dFlowSize: 0,\n  // gclbSize: 0,\n  // lStorageSize: 0\n};\nconst Calculator = () => {\n  _s();\n  // CE Vars\n  const [ceNumNodes, setNumNodes] = useState(() => sessionStorage.getItem('ceNumNodes')) || defaultValues.ceNumNodes;\n  const [ceNumClusters, setNumClusters] = useState(() => sessionStorage.getItem('ceNumClusters')) || defaultValues.ceNumClusters;\n  const [ceCrit, setCrit] = useState(() => sessionStorage.getItem('ceCrit')) || defaultValues.ceCrit;\n  const [ceSizeNodes, setSizeNodes] = useState(() => sessionStorage.getItem('ceSizeNodes')) || defaultValues.ceSizeNodes;\n  const [ceBootDiskSize, setBootDiskSize] = useState(() => sessionStorage.getItem('ceBootDiskSize')) || defaultValues.ceBootDiskSize;\n\n  // Cloud Storage Vars\n  const [storageAmount, setStorageAmount] = useState(() => parseFloat(sessionStorage.getItem('storageAmount')) || defaultValues.storageAmount);\n  const [storageClassA, setStorageClassA] = useState(() => parseFloat(sessionStorage.getItem('storageClassA')) || defaultValues.storageClassA);\n  const [storageClassB, setStorageClassB] = useState(() => parseFloat(sessionStorage.getItem('storageClassB')) || defaultValues.storageClassB);\n  const [storageTransfer, setStorageTransfer] = useState(() => parseFloat(sessionStorage.getItem('storageTransfer')) || defaultValues.storageTransfer);\n\n  // // Filestore vars\n\n  // BQ Vars\n  const [bqComputeSize, setBqComputeSize] = useState(() => sessionStorage.getItem('bqComputeSize')) || defaultValues.bqComputeSize;\n  const [bqActiveStorage, setBqActiveStorage] = useState(() => sessionStorage.getItem('bqActiveStorage')) || defaultValues.bqActiveStorage;\n  const [bqLongStorage, setBqLongStorage] = useState(() => sessionStorage.getItem('bqLongStorage')) || defaultValues.bqLongStorage;\n  const [bqActivePhysStorage, setBqActivePhysStorage] = useState(() => sessionStorage.getItem('bqActivePhysStorage')) || defaultValues.bqActivePhysStorage;\n  const [bqLongPhysStorage, setBqLongPhysStorage] = useState(() => sessionStorage.getItem('bqLongPhysStorage')) || defaultValues.bqLongPhysStorage;\n  const [bqStreamInserts, setBqStreamInserts] = useState(() => sessionStorage.getItem('bqStreamInserts')) || defaultValues.bqStreamInserts;\n  const [bqStreamWrites, setBqStreamWrites] = useState(() => sessionStorage.getItem('bqStreamWrites')) || defaultValues.bqStreamWrites;\n  const [bqStreamReads, setBqStreamReads] = useState(() => sessionStorage.getItem('bqStreamReads')) || defaultValues.bqStreamReads;\n\n  // General Vars\n  const [result, setResult] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isTileModalOpen, setIsTileModalOpen] = useState(false);\n  const [initialResult, setInitialResult] = useState(null);\n  const [selectedDropdownValue, setSelectedDropdownValue] = useState('');\n  const [isTileModalOpend, setIsTileModalOpend] = useState(true);\n  // const [isOpen,setIsOpen]=useState(false)\n  const [selectedProducts, setSelectedProducts] = useState(() => {\n    const savedProducts = sessionStorage.getItem('selectedProducts');\n    return savedProducts ? JSON.parse(savedProducts) : [];\n  });\n\n  // Helper function to save input in session storage, validate input to 0-9 in string format, and trigger updating of costs\n  const handleInputChange = (setter, key) => e => {\n    const value = e.target.value;\n    if (/^\\d*$/.test(value)) {\n      setter(value);\n    }\n    sessionStorage.setItem(key, value);\n    fetchUpdatedCosts();\n  };\n\n  // Change handler\n  const handleCeNumNodesChange = handleInputChange(setNumNodes, 'ceNumNodes');\n  const handleNumClustersChange = handleInputChange(setNumClusters, 'ceNumClusters');\n  const handleCritChange = handleInputChange(setCrit, 'ceCrit');\n  const handleSizeNodesChange = handleInputChange(setSizeNodes, 'ceSizeNodes');\n  const handleBootDiskSizeChange = handleInputChange(setBootDiskSize, 'ceBootDiskSize');\n  const handleStorageAmountChange = handleInputChange(setStorageAmount, 'storageAmount');\n  const handleStorageClassAChange = handleInputChange(setStorageClassA, 'storageClassA');\n  const handleStorageClassBChange = handleInputChange(setStorageClassB, 'storageClassB');\n  const handleStorageTransferChange = handleInputChange(setStorageTransfer, 'storageTransfer');\n  const handleBqComputeSizeChange = handleInputChange(setBqComputeSize, 'bqComputeSize');\n  const handleBqActiveStorageChange = handleInputChange(setBqActiveStorage, 'bqActiveStorage');\n  const handleBqLongStorageChange = handleInputChange(setBqLongStorage, 'bqLongStorage');\n  const handleBqActivePhysStorageChange = handleInputChange(setBqActivePhysStorage, 'bqActivePhysStorage');\n  const handleBqLongPhysStorageChange = handleInputChange(setBqLongPhysStorage, 'bqLongPhysStorage');\n  const handleBqStreamInsertsChange = handleInputChange(setBqStreamInserts, 'bqStreamInserts');\n  const handleBqStreamWritesChange = handleInputChange(setBqStreamWrites, 'bqStreamWrites');\n  const handleBqStreamReadsChange = handleInputChange(setBqStreamReads, 'bqStreamReads');\n  const saveConfiguration = () => {\n    sessionStorage.setItem('savedConfiguration', JSON.stringify(result));\n    setInitialResult(result); // Reset the comparison in the UI\n  };\n  const handleDetailsClick = () => {\n    setIsModalOpen(true);\n    setIsTileModalOpen(false); // Close the tile modal if it's open\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleTileModalOpen = () => {\n    setIsTileModalOpen(true);\n    setIsModalOpen(false);\n    // handleopenModel()\n  };\n  const handleTileModalClose = () => {\n    setIsTileModalOpen(pre => !pre);\n  };\n  const handleTileModalClosed = () => {\n    setIsTileModalOpend(pre => !pre);\n  };\n  // const handleopenModel=()=>{\n  //   setIsOpen((prev)=>!prev)\n\n  // }\n\n  const handleProductToggle = product => {\n    setSelectedProducts(prevSelectedProducts => {\n      const updatedProducts = prevSelectedProducts.includes(product) ? prevSelectedProducts.filter(p => p !== product) : [...prevSelectedProducts, product];\n      sessionStorage.setItem('selectedProducts', JSON.stringify(updatedProducts));\n      return updatedProducts;\n    });\n  };\n\n  // Fetch updated costs\n  const fetchUpdatedCosts = () => {\n    const components = {\n      ce: ['ceNumNodes', 'ceNumClusters', 'ceCrit', 'ceSizeNodes', 'ceBootDiskSize'],\n      cloudStorage: ['storageAmount', 'storageClassA', 'storageClassB', 'storageTransfer'],\n      bq: ['bqComputeSize', 'bqActiveStorage', 'bqLongStorage', 'bqActivePhysStorage', 'bqLongPhysStorage', 'bqStreamInserts', 'bqStreamWrites', 'bqStreamReads']\n      // Add other components here as needed\n    };\n    const initializePayload = () => {\n      const payload = {};\n      Object.keys(components).forEach(component => {\n        payload[component] = {};\n        components[component].forEach(field => {\n          payload[component][field] = parseFloat(defaultValues[field]);\n        });\n      });\n      return payload;\n    };\n    const updatePayload = payload => {\n      Object.keys(components).forEach(component => {\n        if (selectedProducts.includes(`${component.charAt(0).toUpperCase()}${component.slice(1)}Component`)) {\n          components[component].forEach(field => {\n            const value = parseFloat(sessionStorage.getItem(field)) || parseFloat(defaultValues[field]);\n            payload[component][field] = value;\n          });\n        }\n      });\n    };\n    const payload = initializePayload();\n    updatePayload(payload);\n    fetch('http://localhost:8080/gcp-calc', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      setResult(data);\n      if (!initialResult) {\n        setInitialResult(data);\n      }\n    }).catch(error => console.error('Error:', error));\n  };\n  useEffect(() => {\n    const debouncedFetch = debounce(fetchUpdatedCosts, 300);\n    debouncedFetch();\n  }, [ceNumNodes, ceNumClusters, ceCrit, ceSizeNodes, ceBootDiskSize, storageAmount, storageClassA, storageClassB, storageTransfer, bqComputeSize, bqActiveStorage, bqLongStorage, bqActivePhysStorage, bqLongPhysStorage, bqStreamInserts, bqStreamReads, bqStreamWrites, selectedProducts]);\n\n  // Debounce function\n  function debounce(func, wait) {\n    let timeout;\n    return function (...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n  const buttons = [{\n    text: 'Open Product Selection',\n    onClick: handleTileModalOpen\n  }];\n  const buttonSave = [{\n    text: 'Details',\n    onClick: handleDetailsClick\n  },, {\n    text: 'Save Configuration',\n    onClick: saveConfiguration\n  }];\n  const componentMapping = {\n    ce_products: {\n      component: CEComponent,\n      props: {\n        ceNumNodes,\n        ceNumClusters,\n        ceCrit,\n        ceSizeNodes,\n        ceBootDiskSize,\n        handleCeNumNodesChange,\n        handleNumClustersChange,\n        handleCritChange,\n        handleSizeNodesChange,\n        handleBootDiskSizeChange\n      }\n    },\n    cloud_storage_products: {\n      component: CloudStorageComponent,\n      props: {\n        storageAmount,\n        storageClassA,\n        storageClassB,\n        storageTransfer,\n        handleStorageAmountChange,\n        handleStorageClassAChange,\n        handleStorageClassBChange,\n        handleStorageTransferChange\n      }\n    },\n    bq_products: {\n      component: BQComponent,\n      props: {\n        bqComputeSize,\n        bqActiveStorage,\n        bqLongStorage,\n        bqActivePhysStorage,\n        bqLongPhysStorage,\n        bqStreamInserts,\n        bqStreamWrites,\n        bqStreamReads,\n        handleBqComputeSizeChange,\n        handleBqActiveStorageChange,\n        handleBqLongStorageChange,\n        handleBqActivePhysStorageChange,\n        handleBqLongPhysStorageChange,\n        handleBqStreamInsertsChange,\n        handleBqStreamWritesChange,\n        handleBqStreamReadsChange\n      }\n    }\n    // Add other components here as needed\n  };\n  const renderComponents = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSelectedDropdownValue(e.target.value),\n          value: selectedDropdownValue,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select the option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), selectedProducts.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product,\n            children: product\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), selectedProducts.filter(product => {\n        return product === selectedDropdownValue;\n      }).map(product => {\n        const ComponentConfig = componentMapping[product];\n        if (ComponentConfig) {\n          const {\n            component: Component,\n            props\n          } = ComponentConfig;\n          return /*#__PURE__*/_jsxDEV(Component, {\n            ...props\n          }, product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 22\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  };\n  const filteredProducts = result.Product ? selectedProducts.filter(product => result.Product.hasOwnProperty(product)).map(product => ({\n    [product]: result.Product[product]\n  })) : [];\n  const grandTotal = result.grand_total;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StickyButton, {\n        buttons: buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headers-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(Headers, {\n        level: 1,\n        text: \"GCP Calculator\",\n        className: \"header-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 7\n      }, this), isTileModalOpend && selectedProducts.length > 0 && /*#__PURE__*/_jsxDEV(ModalView, {\n        wrapperClassName: 'submit-btn',\n        className: 'wrapper',\n        containerClass: 'containerBtn',\n        onCloseBtn: handleTileModalClosed,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item1\",\n          children: renderComponents()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ProductCostTable, {\n          result: result,\n          initialResult: initialResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StickyButton, {\n          buttons: buttonSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 5\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      data: selectedProducts,\n      onClose: handleCloseModal,\n      total: grandTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 23\n    }, this), isTileModalOpen && /*#__PURE__*/_jsxDEV(ProductSelectionModal, {\n      onClose: handleTileModalClose,\n      onProductToggle: handleProductToggle,\n      selectedProducts: selectedProducts,\n      setIsTileModalOpend: setIsTileModalOpend,\n      handleClose: isTileModalOpen && handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"SI4olDUI+8qqc3+M5+JoUVu4JvU=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","ProductSelectionModal","Headers","CEComponent","CloudStorageComponent","BQComponent","StickyButton","ProductCostTable","ModalView","LandingPage","jsxDEV","_jsxDEV","defaultValues","ceNumNodes","ceNumClusters","ceCrit","ceSizeNodes","ceBootDiskSize","storageAmount","storageClassA","storageClassB","storageTransfer","bqComputeSize","bqActiveStorage","bqLongStorage","bqActivePhysStorage","bqLongPhysStorage","bqStreamInserts","bqStreamWrites","bqStreamReads","Calculator","_s","setNumNodes","sessionStorage","getItem","setNumClusters","setCrit","setSizeNodes","setBootDiskSize","setStorageAmount","parseFloat","setStorageClassA","setStorageClassB","setStorageTransfer","setBqComputeSize","setBqActiveStorage","setBqLongStorage","setBqActivePhysStorage","setBqLongPhysStorage","setBqStreamInserts","setBqStreamWrites","setBqStreamReads","result","setResult","isModalOpen","setIsModalOpen","isTileModalOpen","setIsTileModalOpen","initialResult","setInitialResult","selectedDropdownValue","setSelectedDropdownValue","isTileModalOpend","setIsTileModalOpend","selectedProducts","setSelectedProducts","savedProducts","JSON","parse","handleInputChange","setter","key","e","value","target","test","setItem","fetchUpdatedCosts","handleCeNumNodesChange","handleNumClustersChange","handleCritChange","handleSizeNodesChange","handleBootDiskSizeChange","handleStorageAmountChange","handleStorageClassAChange","handleStorageClassBChange","handleStorageTransferChange","handleBqComputeSizeChange","handleBqActiveStorageChange","handleBqLongStorageChange","handleBqActivePhysStorageChange","handleBqLongPhysStorageChange","handleBqStreamInsertsChange","handleBqStreamWritesChange","handleBqStreamReadsChange","saveConfiguration","stringify","handleDetailsClick","handleCloseModal","handleTileModalOpen","handleTileModalClose","pre","handleTileModalClosed","handleProductToggle","product","prevSelectedProducts","updatedProducts","includes","filter","p","components","ce","cloudStorage","bq","initializePayload","payload","Object","keys","forEach","component","field","updatePayload","charAt","toUpperCase","slice","fetch","method","headers","body","then","response","json","data","catch","error","console","debouncedFetch","debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","buttons","text","onClick","buttonSave","componentMapping","ce_products","props","cloud_storage_products","bq_products","renderComponents","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","ComponentConfig","Component","filteredProducts","Product","hasOwnProperty","grandTotal","grand_total","level","length","wrapperClassName","containerClass","onCloseBtn","onClose","total","onProductToggle","handleClose","_c","$RefreshReg$"],"sources":["C:/CShweta/src/components/Calculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Calculator.css';\r\nimport Modal from './Products/DetailedCostsModal';\r\nimport ProductSelectionModal from './ProductSelectionModal';\r\nimport Headers from './Headers';\r\nimport CEComponent from './Products/CEComponent';\r\nimport CloudStorageComponent from './Products/CloudStorageComponent';\r\n// import DBComponent from './DBComponent';\r\nimport BQComponent from './Products/BQComponent';\r\n// import DFlowComponent from './DFlowComponent';\r\n// import GCLBComponent from './GCLBComponent'\r\n// import LStorageComponent from './LStorageComponent';\r\nimport StickyButton from './StickyButton';\r\nimport ProductCostTable from './ProductCostTable/ProductCostTable';\r\nimport ModalView from './ModalV1/modalView';\r\nimport LandingPage from './LandingPage/LandingPage';\r\n// import FilestoreComponent from './FilestoreComponent';\r\n\r\nconst defaultValues = {\r\n  ceNumNodes: \"1\",\r\n  ceNumClusters: \"1\",\r\n  ceCrit: \"1\",\r\n  ceSizeNodes: \"0\",\r\n  ceBootDiskSize: \"0\",\r\n  // storageType: 0,\r\n  // storageVolume: 0,\r\n  // storageClassA: 0,\r\n  // storageClassB: 0,\r\n  // storageRegionEgress: 0,\r\n  // storageInetEgress: 0,\r\n  // storageFileBackup: 0,\r\n  // storageBlockSnapshot: 0,\r\n  storageAmount: \"0\",\r\n  storageClassA: \"0\",\r\n  storageClassB: \"0\",\r\n  storageTransfer: \"0\",\r\n  // basicStorage: 0,\r\n  // premiumStorage: 0,\r\n  // highCapStorage: 0,\r\n  // lowCapStorage: 0,\r\n  // enterpriseStorage: 0,\r\n  // backupStorage: 0,\r\n  // dbType: 0,\r\n  // dbSize: 0,\r\n  // dbMysqlNetEgress: 0,\r\n  // dbMysqlInetEgress: 0,\r\n  // dbNosqlReads: 0,\r\n  // dbNosqlWrites: 0,\r\n  // dbNosqlDocs: 0,\r\n  // dbNosqlNetEgress: 0,\r\n  // dbNosqlInetEgress: 0,\r\n  // dbBDRegionEgress: 0,\r\n  // dbBDInetEgress: 0,\r\n  bqComputeSize: \"0\",\r\n  bqActiveStorage: \"0\",\r\n  bqLongStorage: \"0\",\r\n  bqActivePhysStorage: \"0\",\r\n  bqLongPhysStorage: \"0\",\r\n  bqStreamInserts: \"0\",\r\n  bqStreamWrites: \"0\",\r\n  bqStreamReads: \"0\",\r\n  // dFlowType: 0,\r\n  // dFlowSize: 0,\r\n  // gclbSize: 0,\r\n  // lStorageSize: 0\r\n};\r\n\r\n\r\nconst Calculator = () => {\r\n  // CE Vars\r\n  const [ceNumNodes, setNumNodes] = useState(() => sessionStorage.getItem('ceNumNodes')) || defaultValues.ceNumNodes;\r\n  const [ceNumClusters, setNumClusters] = useState(() => sessionStorage.getItem('ceNumClusters')) || defaultValues.ceNumClusters;\r\n  const [ceCrit, setCrit] = useState(() => sessionStorage.getItem('ceCrit')) || defaultValues.ceCrit;\r\n  const [ceSizeNodes, setSizeNodes] = useState(() => sessionStorage.getItem('ceSizeNodes')) || defaultValues.ceSizeNodes;\r\n  const [ceBootDiskSize, setBootDiskSize] = useState(() => sessionStorage.getItem('ceBootDiskSize')) || defaultValues.ceBootDiskSize;\r\n\r\n  \r\n  // Cloud Storage Vars\r\n  const [storageAmount, setStorageAmount] = useState(() => parseFloat(sessionStorage.getItem('storageAmount')) || defaultValues.storageAmount);\r\n  const [storageClassA, setStorageClassA] = useState(() => parseFloat(sessionStorage.getItem('storageClassA')) || defaultValues.storageClassA);\r\n  const [storageClassB, setStorageClassB] = useState(() => parseFloat(sessionStorage.getItem('storageClassB')) || defaultValues.storageClassB);\r\n  const [storageTransfer, setStorageTransfer] = useState(() => parseFloat(sessionStorage.getItem('storageTransfer')) || defaultValues.storageTransfer);\r\n\r\n  // // Filestore vars\r\n \r\n\r\n  // BQ Vars\r\n  const [bqComputeSize, setBqComputeSize] = useState(() => sessionStorage.getItem('bqComputeSize')) || defaultValues.bqComputeSize;\r\n  const [bqActiveStorage, setBqActiveStorage] = useState(() => sessionStorage.getItem('bqActiveStorage')) || defaultValues.bqActiveStorage;\r\n  const [bqLongStorage, setBqLongStorage] = useState(() => sessionStorage.getItem('bqLongStorage')) || defaultValues.bqLongStorage;\r\n  const [bqActivePhysStorage, setBqActivePhysStorage] = useState(() => sessionStorage.getItem('bqActivePhysStorage')) || defaultValues.bqActivePhysStorage;\r\n  const [bqLongPhysStorage, setBqLongPhysStorage] = useState(() => sessionStorage.getItem('bqLongPhysStorage')) || defaultValues.bqLongPhysStorage;\r\n  const [bqStreamInserts, setBqStreamInserts] = useState(() => sessionStorage.getItem('bqStreamInserts')) || defaultValues.bqStreamInserts;\r\n  const [bqStreamWrites, setBqStreamWrites] = useState(() => sessionStorage.getItem('bqStreamWrites')) || defaultValues.bqStreamWrites;\r\n  const [bqStreamReads, setBqStreamReads] = useState(() => sessionStorage.getItem('bqStreamReads')) || defaultValues.bqStreamReads;\r\n\r\n \r\n\r\n  // General Vars\r\n  const [result, setResult] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isTileModalOpen, setIsTileModalOpen] = useState(false);\r\n  const [initialResult, setInitialResult] = useState(null);\r\n  const [selectedDropdownValue, setSelectedDropdownValue] = useState('');\r\n  const[isTileModalOpend,setIsTileModalOpend]=useState(true)\r\n  // const [isOpen,setIsOpen]=useState(false)\r\n  const [selectedProducts, setSelectedProducts] = useState(() => {\r\n    const savedProducts = sessionStorage.getItem('selectedProducts');\r\n    return savedProducts ? JSON.parse(savedProducts) : [];\r\n  });\r\n\r\n  // Helper function to save input in session storage, validate input to 0-9 in string format, and trigger updating of costs\r\n  const handleInputChange = (setter, key) => (e) => {\r\n    const value = e.target.value;\r\n    if (/^\\d*$/.test(value)) {\r\n      setter(value);\r\n    }\r\n    sessionStorage.setItem(key, value);\r\n    fetchUpdatedCosts();\r\n  };\r\n\r\n  // Change handler\r\n  const handleCeNumNodesChange = handleInputChange(setNumNodes, 'ceNumNodes');\r\n  const handleNumClustersChange = handleInputChange(setNumClusters, 'ceNumClusters');\r\n  const handleCritChange = handleInputChange(setCrit, 'ceCrit');\r\n  const handleSizeNodesChange = handleInputChange(setSizeNodes, 'ceSizeNodes');\r\n  const handleBootDiskSizeChange = handleInputChange(setBootDiskSize, 'ceBootDiskSize');\r\n\r\n  \r\n\r\n  const handleStorageAmountChange = handleInputChange(setStorageAmount, 'storageAmount');\r\n  const handleStorageClassAChange = handleInputChange(setStorageClassA, 'storageClassA');\r\n  const handleStorageClassBChange = handleInputChange(setStorageClassB, 'storageClassB');\r\n  const handleStorageTransferChange = handleInputChange(setStorageTransfer, 'storageTransfer');\r\n\r\n \r\n\r\n  const handleBqComputeSizeChange = handleInputChange(setBqComputeSize, 'bqComputeSize');\r\n  const handleBqActiveStorageChange = handleInputChange(setBqActiveStorage, 'bqActiveStorage');\r\n  const handleBqLongStorageChange = handleInputChange(setBqLongStorage, 'bqLongStorage');\r\n  const handleBqActivePhysStorageChange = handleInputChange(setBqActivePhysStorage, 'bqActivePhysStorage');\r\n  const handleBqLongPhysStorageChange = handleInputChange(setBqLongPhysStorage, 'bqLongPhysStorage');\r\n  const handleBqStreamInsertsChange = handleInputChange(setBqStreamInserts, 'bqStreamInserts');\r\n  const handleBqStreamWritesChange = handleInputChange(setBqStreamWrites, 'bqStreamWrites');\r\n  const handleBqStreamReadsChange = handleInputChange(setBqStreamReads, 'bqStreamReads');\r\n\r\n \r\n\r\n  const saveConfiguration = () => {\r\n    sessionStorage.setItem('savedConfiguration', JSON.stringify(result));\r\n    setInitialResult(result); // Reset the comparison in the UI\r\n  };\r\n\r\n  const handleDetailsClick = () => {\r\n    setIsModalOpen(true);\r\n    setIsTileModalOpen(false); // Close the tile modal if it's open\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  \r\n  }\r\n\r\n  const handleTileModalOpen = () => {\r\n    setIsTileModalOpen(true);\r\n    setIsModalOpen(false); \r\n    // handleopenModel()\r\n    \r\n  };\r\n\r\n  const handleTileModalClose = () =>{ \r\n    setIsTileModalOpen((pre)=>!pre)\r\n  \r\n  }\r\n \r\n  const handleTileModalClosed = () =>{ \r\n    setIsTileModalOpend((pre)=>!pre)\r\n  }\r\n// const handleopenModel=()=>{\r\n//   setIsOpen((prev)=>!prev)\r\n\r\n// }\r\n\r\n  const handleProductToggle = (product) => {\r\n    setSelectedProducts((prevSelectedProducts) => {\r\n   \r\n      const updatedProducts = prevSelectedProducts.includes(product)\r\n        ? prevSelectedProducts.filter((p) => p !== product)\r\n        : [...prevSelectedProducts, product];\r\n      sessionStorage.setItem('selectedProducts', JSON.stringify(updatedProducts));\r\n      return updatedProducts;\r\n    });\r\n  };\r\n\r\n  // Fetch updated costs\r\n  const fetchUpdatedCosts = () => {\r\n    const components = {\r\n      ce: ['ceNumNodes', 'ceNumClusters', 'ceCrit', 'ceSizeNodes', 'ceBootDiskSize'],\r\n      cloudStorage: ['storageAmount', 'storageClassA', 'storageClassB', 'storageTransfer'],\r\n      bq: ['bqComputeSize', 'bqActiveStorage', 'bqLongStorage', 'bqActivePhysStorage', 'bqLongPhysStorage', 'bqStreamInserts', 'bqStreamWrites', 'bqStreamReads'],\r\n      // Add other components here as needed\r\n    };\r\n\r\n    const initializePayload = () => {\r\n      const payload = {};\r\n      Object.keys(components).forEach(component => {\r\n        payload[component] = {};\r\n        components[component].forEach(field => {\r\n          payload[component][field] = parseFloat(defaultValues[field]);\r\n        });\r\n      });\r\n     \r\n      return payload;\r\n    };\r\n\r\n    const updatePayload = (payload) => {\r\n      Object.keys(components).forEach(component => {\r\n        if (selectedProducts.includes(`${component.charAt(0).toUpperCase()}${component.slice(1)}Component`)) {\r\n          components[component].forEach(field => {\r\n            const value = parseFloat(sessionStorage.getItem(field)) || parseFloat(defaultValues[field]);\r\n           \r\n            payload[component][field] = value;\r\n          });\r\n        }\r\n      });\r\n    \r\n    };\r\n\r\n    const payload = initializePayload();\r\n    updatePayload(payload);\r\n\r\n    fetch('http://localhost:8080/gcp-calc', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(payload)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setResult(data);\r\n      if (!initialResult) {\r\n        setInitialResult(data);\r\n      }\r\n   \r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  }    \r\n\r\n  useEffect(() => {\r\n    const debouncedFetch = debounce(fetchUpdatedCosts, 300); \r\n    debouncedFetch();\r\n  }, [\r\n    ceNumNodes, ceNumClusters, ceCrit, ceSizeNodes, ceBootDiskSize,\r\n    storageAmount, storageClassA, storageClassB, storageTransfer,\r\n    bqComputeSize, bqActiveStorage, bqLongStorage, bqActivePhysStorage, bqLongPhysStorage, bqStreamInserts, bqStreamReads, bqStreamWrites,\r\n    selectedProducts\r\n  ]);\r\n\r\n// Debounce function\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\n  const buttons = [\r\n    { text: 'Open Product Selection', onClick: handleTileModalOpen },\r\n  ];\r\n  const buttonSave = [\r\n    { text: 'Details', onClick: handleDetailsClick },,\r\n    { text: 'Save Configuration', onClick: saveConfiguration }\r\n  ];\r\n  const componentMapping = {\r\n    ce_products: {\r\n      component: CEComponent,\r\n      props: {\r\n        ceNumNodes,\r\n        ceNumClusters,\r\n        ceCrit,\r\n        ceSizeNodes,\r\n        ceBootDiskSize,\r\n        handleCeNumNodesChange,\r\n        handleNumClustersChange,\r\n        handleCritChange,\r\n        handleSizeNodesChange,\r\n        handleBootDiskSizeChange,\r\n      },\r\n    },\r\n    \r\n    cloud_storage_products: {\r\n      component: CloudStorageComponent,\r\n      props: {\r\n        storageAmount,\r\n        storageClassA,\r\n        storageClassB,\r\n        storageTransfer,\r\n        handleStorageAmountChange,\r\n        handleStorageClassAChange,\r\n        handleStorageClassBChange,\r\n        handleStorageTransferChange,\r\n      },\r\n    },\r\n    bq_products: {\r\n      component: BQComponent,\r\n      props: {\r\n        bqComputeSize,\r\n        bqActiveStorage,\r\n        bqLongStorage,\r\n        bqActivePhysStorage,\r\n        bqLongPhysStorage,\r\n        bqStreamInserts,\r\n        bqStreamWrites,\r\n        bqStreamReads,\r\n        handleBqComputeSizeChange,\r\n        handleBqActiveStorageChange,\r\n        handleBqLongStorageChange,\r\n        handleBqActivePhysStorageChange,\r\n        handleBqLongPhysStorageChange,\r\n        handleBqStreamInsertsChange,\r\n        handleBqStreamWritesChange,\r\n        handleBqStreamReadsChange,\r\n      },\r\n    },\r\n    // Add other components here as needed\r\n  };\r\n\r\n  const renderComponents = () => {\r\n    return (\r\n      <div>\r\n        <div className=\"dropdown-container\">\r\n          <select onChange={(e) => setSelectedDropdownValue(e.target.value)} value={selectedDropdownValue}>\r\n            <option>select the option</option>\r\n            {selectedProducts.map((product) => (\r\n              <option key={product} value={product}>\r\n                {product}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n       \r\n       {/* <LandingPage/> */}\r\n        {selectedProducts\r\n          .filter((product) =>{return  product === selectedDropdownValue\r\n          })\r\n          .map((product) => {\r\n            const ComponentConfig = componentMapping[product];\r\n            if (ComponentConfig) {\r\n              const { component: Component, props } = ComponentConfig;\r\n              return <Component key={product} {...props} />;\r\n            }\r\n            return null;\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n  const filteredProducts = result.Product\r\n  ? selectedProducts\r\n      .filter(product => result.Product.hasOwnProperty(product))\r\n      .map(product => ({ [product]: result.Product[product] }))\r\n  : [];\r\nconst grandTotal = result.grand_total;\r\n  return (\r\n    <div className=\"calculator-container\">\r\n      <div>\r\n      <StickyButton buttons={buttons} />\r\n       \r\n      </div>\r\n   \r\n    <div className=\"headers-input-container\">\r\n      <Headers level={1} text='GCP Calculator' className='header-primary'/>\r\n      {isTileModalOpend&&selectedProducts.length>0 &&  <ModalView wrapperClassName={'submit-btn'} className={'wrapper'} containerClass={'containerBtn'} onCloseBtn={handleTileModalClosed} >\r\n     <div className='item1'>\r\n      {renderComponents()}\r\n      </div> \r\n\r\n\r\n      <ProductCostTable result={result} initialResult={initialResult}/>\r\n<StickyButton buttons={buttonSave}/>\r\n      </ModalView>\r\n      }\r\n      </div>\r\n      {isModalOpen && <Modal data={selectedProducts} onClose={handleCloseModal} total={grandTotal} />}\r\n      {isTileModalOpen && <ProductSelectionModal onClose={handleTileModalClose} onProductToggle={handleProductToggle} selectedProducts={selectedProducts}setIsTileModalOpend={setIsTileModalOpend} handleClose={isTileModalOpen&&handleCloseModal} />}\r\n    \r\n    </div>\r\n  );\r\n};\r\nexport default Calculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}